{"ast":null,"code":"var _jsxFileName = \"/Users/paulndam/Documents/CODINGDOJO/MERN/React/BlueWeather-App/weather-app-pwa/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport getTheWeather from './components/getTheWeather.js';\nimport './App.css';\n\nconst App = () => {\n  const [query, setquery] = useState('');\n  const [weather, setweather] = useState({});\n\n  const search = async e => {\n    if (e.key === 'Enter') {\n      const data = await getTheWeather(query);\n      setweather(data); //reseting the search bar or query back to zero\n\n      setquery('');\n      console.log(data);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"the-main-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"search\",\n    placeholder: \"seaerch\",\n    value: query,\n    onChange: e => setquery(e.target.value),\n    onKeyPress: search,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }), weather.main && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"city\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"city-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, weather.name), /*#__PURE__*/React.createElement(\"sup\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, weather.sys.country)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"city-temp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }, Math.round(weather.main.temp), /*#__PURE__*/React.createElement(\"sup\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, \"\\xB0C\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"city-icon\",\n    src: `https://openweathermap.org/img/wn/${weather.weather[0].icon}@2x.png`,\n    alt: weather.weather[0].description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, weather.weather[0].description), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, \"Longitude:\", weather.coord.lon), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, \"Latitude:\", weather.coord.lat))));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/paulndam/Documents/CODINGDOJO/MERN/React/BlueWeather-App/weather-app-pwa/src/App.js"],"names":["React","useState","useEffect","getTheWeather","App","query","setquery","weather","setweather","search","e","key","data","console","log","target","value","main","name","sys","country","Math","round","temp","icon","description","coord","lon","lat"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,aAAP,MAA0B,+BAA1B;AACA,OAAO,WAAP;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAChB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,EAAD,CAAtC;;AAEA,QAAMQ,MAAM,GAAG,MAAOC,CAAP,IAAa;AAC1B,QAAIA,CAAC,CAACC,GAAF,KAAU,OAAd,EAAuB;AACrB,YAAMC,IAAI,GAAG,MAAMT,aAAa,CAACE,KAAD,CAAhC;AAEAG,MAAAA,UAAU,CAACI,IAAD,CAAV,CAHqB,CAIrB;;AACAN,MAAAA,QAAQ,CAAC,EAAD,CAAR;AAEAO,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACD;AACF,GAVD;;AAWA,sBACE;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,SAAS,EAAC,QAFZ;AAGE,IAAA,WAAW,EAAC,SAHd;AAIE,IAAA,KAAK,EAAEP,KAJT;AAKE,IAAA,QAAQ,EAAGK,CAAD,IAAOJ,QAAQ,CAACI,CAAC,CAACK,MAAF,CAASC,KAAV,CAL3B;AAME,IAAA,UAAU,EAAEP,MANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAWGF,OAAO,CAACU,IAAR,iBACC;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOV,OAAO,CAACW,IAAf,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMX,OAAO,CAACY,GAAR,CAAYC,OAAlB,CAFF,CADF,eAME;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,IAAI,CAACC,KAAL,CAAWf,OAAO,CAACU,IAAR,CAAaM,IAAxB,CADH,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,CANF,eAWE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,SAAS,EAAC,WADZ;AAEE,IAAA,GAAG,EAAG,qCAAoChB,OAAO,CAACA,OAAR,CAAgB,CAAhB,EAAmBiB,IAAK,SAFpE;AAGE,IAAA,GAAG,EAAEjB,OAAO,CAACA,OAAR,CAAgB,CAAhB,EAAmBkB,WAH1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIlB,OAAO,CAACA,OAAR,CAAgB,CAAhB,EAAmBkB,WAAvB,CAPF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAclB,OAAO,CAACmB,KAAR,CAAcC,GAA5B,CARF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAapB,OAAO,CAACmB,KAAR,CAAcE,GAA3B,CATF,CAXF,CAZJ,CADF;AAuCD,CAtDD;;AAwDA,eAAexB,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport getTheWeather from './components/getTheWeather.js';\nimport './App.css';\n\nconst App = () => {\n  const [query, setquery] = useState('');\n  const [weather, setweather] = useState({});\n\n  const search = async (e) => {\n    if (e.key === 'Enter') {\n      const data = await getTheWeather(query);\n\n      setweather(data);\n      //reseting the search bar or query back to zero\n      setquery('');\n\n      console.log(data);\n    }\n  };\n  return (\n    <div className='the-main-container'>\n      <input\n        type='text'\n        className='search'\n        placeholder='seaerch'\n        value={query}\n        onChange={(e) => setquery(e.target.value)}\n        onKeyPress={search}\n      />\n\n      {/* // line of code says that if the data from the weather that we are calling exists then it will return the react component and if it doesn't exist then it returns nothing. */}\n      {weather.main && (\n        <div className='city'>\n          <h2 className='city-name'>\n            <span>{weather.name}</span>\n            <sup>{weather.sys.country}</sup>\n          </h2>\n\n          <div className='city-temp'>\n            {Math.round(weather.main.temp)}\n            <sup>&deg;C</sup>\n          </div>\n\n          <div className='info'>\n            <img\n              className='city-icon'\n              src={`https://openweathermap.org/img/wn/${weather.weather[0].icon}@2x.png`}\n              alt={weather.weather[0].description}\n            />\n\n            <p>{weather.weather[0].description}</p>\n            <p>Longitude:{weather.coord.lon}</p>\n            <p>Latitude:{weather.coord.lat}</p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}